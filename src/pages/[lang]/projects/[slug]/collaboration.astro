---
import ProjectLayout from '@layouts/project/ProjectLayout.astro';
import { createSupabaseServerClient } from '@backend/supabaseServerClient';
import { getUserProfile } from '@backend/auth';
import { listPendingInvitations } from '@backend/crud';
import { getProjectExtended } from '@backend/helpers';
import { getLangFromUrl, getTranslations } from '@i18n';
import { ManageUsers } from '@apps/project-collaboration/ManageUsers';

const lang = getLangFromUrl(Astro.url);

const i18n = getTranslations(Astro.request, 'project-collaboration');

const supabase = await createSupabaseServerClient(Astro.request, Astro.cookies);
if (!supabase)
  return Astro.redirect(`/${lang}/sign-in`);

const user = await getUserProfile(supabase);

const projectId = Astro.params.slug;

const project = await getProjectExtended(supabase, projectId as string);

const invitations = await listPendingInvitations(supabase, projectId as string);

if (project.error || invitations.error || !user) { 
  const error = await fetch(`${Astro.url}/404`);
  return new Response(error.body, { headers: error.headers, status: 404 }); 
}
---
<ProjectLayout active="collaboration" user={user} project={project.data}>
  <ManageUsers
    client:load
    i18n={i18n}
    me={user}
    project={project.data}
    invitations={invitations.data} /> 
</ProjectLayout>
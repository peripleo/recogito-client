---
import ProjectLayout from '@layouts/project/ProjectLayout.astro';
import { createSupabaseServerClient } from '@backend/supabaseServerClient';
import { getUserProfile } from '@backend/auth';
import { getLangFromUrl, getTranslations } from '@i18n';
import { ProjectHome } from '@apps/project-home';
import { getProjectWithContexts, listDocumentsInContext } from '@backend/helpers';

const lang = getLangFromUrl(Astro.url);

const supabase = await createSupabaseServerClient(Astro.request, Astro.cookies);
if (!supabase)
  return Astro.redirect(`/${lang}/sign-in`);

const user = await getUserProfile(supabase);

const projectId = Astro.params.slug;

const i18n = getTranslations(Astro.request, 'project-home');

const response = await getProjectWithContexts(supabase, projectId as string);

if (response.error) { 
  const error = await fetch(`${Astro.url}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 }); 
}

if (!response.data) {
  const error = await fetch(`${Astro.url}/404`);
  return new Response(error.body, { headers: error.headers, status: 404 }); 
}

const { contexts, ...project} = response.data || { contexts: undefined };

// Temporary hack
const defaultContext = contexts[0];

const { data, error } = await listDocumentsInContext(supabase, defaultContext.id);

if (error) { 
  const error = await fetch(`${Astro.url}/500`);
  return new Response(error.body, { headers: error.headers, status: 500 }); 
}
---
<ProjectLayout active="home" user={user} project={response.data}>
  <ProjectHome 
    client:load
    i18n={i18n} 
    project={project} 
    defaultContext={contexts[0]} 
    documents={data}/>
</ProjectLayout>